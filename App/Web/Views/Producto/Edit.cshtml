@model Infrastructure.Models.Producto

@{
    ViewBag.Title = "Editar Producto";
}

<div class="jumbotron">
    <div class="container">
        <div class="row">
            <center><h2>Editar producto</h2></center>
        </div>
        <div class="row">
            @using (Html.BeginForm("Save", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.id)
                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.precioUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.precioUnitario, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.precioUnitario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            <input type="file" name="ImageFile" required />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idTipoUnidad, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.DropDownList("idTipoUnidad",
                            (SelectList)ViewBag.idTipoUnidad,
                            "Seleccione el tipo de unidad",
                            new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idTipoProducto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.DropDownList("idTipoProducto",
                           (SelectList)ViewBag.idTipoProd,
                           "Seleccione el tipo de producto",
                           new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idMarca, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.DropDownList("idMarca",
                           (SelectList)ViewBag.idMarca,
                           "Seleccione el tipo de marca",
                           new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cantidadNum, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.cantidadNum, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cantidadNum, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cantidadPeso, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.cantidadPeso, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cantidadPeso, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.CheckBoxFor(model => model.estado)
                            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-2">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

